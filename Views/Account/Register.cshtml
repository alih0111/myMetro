@model DataLayer.ViewModels.RegisterViewModel

@{
    ViewBag.Title = "ثبت نام";
}


<link href="~/Content/css/myCss/register-style.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="d-flex justify-content-center align-items-center" style="height:80vh;">

    <div class="container-register">
        <div class="form-container sign-up-container">
            <img src="~/Content/images/assets/behpouyan.png" style="width:90px; margin-bottom:10px;margin-top:10px" />
            <form action="">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class=" d-flex flex-column align-items-center mt-2">
                    <div class="form-group ">
                        @Html.EditorFor(model => model.UserName, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control input",
                                placeholder = @Html.DisplayNameFor(m => m.UserName)
                            }
                        })
                        <div class="textFont12 mb-1 float-end px-2">
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(model => model.Email, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control input ",
                                placeholder = @Html.DisplayNameFor(m => m.Email)
                            }
                        })
                        <div class="textFont12 mb-1 float-end px-2">
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        @Html.EditorFor(model => model.Password, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control input",
                                placeholder = @Html.DisplayNameFor(m => m.Password)
                            }
                        })
                        <div class="textFont12 mb-1 float-end px-2">
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(model => model.RePassword, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control input",
                                placeholder = @Html.DisplayNameFor(m => m.RePassword),
                            }
                        })
                        <div class="textFont12 mb-1 float-end px-2">
                            @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-3">
                        <input type="submit" id="btn_submit" value="ثبت نام" class="btn btn-success" />
                    </div>
                </div>

            </form>
        </div>
        <div class="form-container sign-in-container">
            <img src="~/Content/images/assets/behpouyan.png" style="width:90px;margin-top:50px" />
            <form action="" style="margin-top:50px">
                <input class="mb-3" id="input1-email" type="email" placeholder="ایمیل ..." required />
                <input id="input1-pass" type="password" placeholder="کلمه عبور ..." required minlength="6" />
                <a href="">فراموشی کلمه عبور</a>
                <button class="btn-login">ورود</button>
            </form>
        </div>
        <div class="overlay-container">
            <div class="overlay">
                <div class="overlay-panel overlay-left">
                    <h1>خوش آمدید</h1>
                    <p>برای دسترسی به تمام امکانات سایت ابتدا در سایت لاگین نمایید</p>
                    <button class="ghost" id="signIn">ورود</button>
                </div>
                <div class="overlay-panel overlay-right">
                    <h1>خوش آمدید</h1>
                    <p>اگر عضو سایت نیستید در کمتر از 1 دقیقه عضو سایت شوید</p>
                    <button class="ghost" id="signUp">عضویت</button>
                </div>
            </div>
        </div>
    </div>
    </div>
}

@section scripts
{

<script>
    let signUp = document.querySelector("#signUp");
    let signIn = document.querySelector("#signIn");
    let btnLogin = document.querySelector(".btn-login");
    let container = document.querySelector(".container-register");
    let signInContainer = document.querySelector(".sign-in-container");
    signUp.addEventListener("click", (e) => {
        e.preventDefault();
        container.classList.add("right-panel-active");
        signInContainer.style.display = "none";
    });
    signIn.addEventListener("click", (e) => {
        e.preventDefault();
        container.classList.remove("right-panel-active");
        signInContainer.style.display = "block";
    });
</script>

<script>
    const forms = document.querySelectorAll("form");

    forms.forEach((form) => {
        form.addEventListener("input", (e) => {
            let {
                target
            } = e;
            target.style.border = '2px solid green'
        });
        form.addEventListener("click", () => {
            let errorEl = document.querySelectorAll('.field-validation-error')
            errorEl.forEach((key) => {
                key.parentNode.parentNode.firstElementChild.style.border = '2px solid red'
                key.parentNode.parentNode.firstElementChild.style.animation="shake 300ms";
            });
        });
    });
</script>
}
